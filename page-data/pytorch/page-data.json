{"componentChunkName":"component---src-templates-blog-post-js","path":"/pytorch/","webpackCompilationHash":"4417cc6730c80466b6a5","result":{"data":{"site":{"siteMetadata":{"title":"µ","author":"Michal Wolski"}},"mdx":{"id":"31075fbc-5109-502a-8e09-ca334fe2d4a4","excerpt":"Preprocessing Avoid Expensive Operations Move Steps to GPU Cache Expensive Steps Use a Better Format Training Multiple Passes Over Same Batch Mixed Precision…","frontmatter":{"title":"Faster PyTorch: A guide to optimizing your machine learning workflows","tags":["pytorch"],"date":"January 02, 2020"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Faster PyTorch: A guide to optimizing your machine learning workflows\",\n  \"date\": \"2020-01-02T22:12:03.284Z\",\n  \"tags\": [\"pytorch\"],\n  \"draft\": \"Yes\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Preprocessing\"), mdx(\"h3\", null, \"Avoid Expensive Operations\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"import torch\\n\\n\\n\")), mdx(\"h3\", null, \"Move Steps to GPU\"), mdx(\"h3\", null, \"Cache Expensive Steps\"), mdx(\"h3\", null, \"Use a Better Format\"), mdx(\"h2\", null, \"Training\"), mdx(\"h3\", null, \"Multiple Passes Over Same Batch\"), mdx(\"h3\", null, \"Mixed Precision\"), mdx(\"h3\", null, \"Pinning\"), mdx(\"h2\", null, \"Inference\"), mdx(\"h2\", null, \"JIT Compiler\"), mdx(\"h2\", null, \"Parameter Tuning\"), mdx(\"h3\", null, \"Use a Subset of the Data\"), mdx(\"h3\", null, \"Move Batches to GPU\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/pytorch/","previous":{"id":"fee6474f-2b51-5f67-98c5-b2862b7acb6b","fields":{"slug":"/self-supervision/"},"frontmatter":{"title":"Self Supervision","tags":["pytorch"],"draft":"Yes"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Self Supervision\",\n  \"date\": \"2020-01-02T22:12:03.284Z\",\n  \"tags\": [\"pytorch\"],\n  \"draft\": \"Yes\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":{"id":"b7840937-ef5e-5ab4-8215-2b4f013efc46","fields":{"slug":"/microman/"},"frontmatter":{"title":"Microman: a simpler way to micromanage your (machine learning) tasks","tags":["python","automation"],"draft":"Yes"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Microman: a simpler way to micromanage your (machine learning) tasks\",\n  \"date\": \"2020-01-02T22:12:03.284Z\",\n  \"tags\": [\"python\", \"automation\"],\n  \"draft\": \"Yes\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Going from raw data to a production machine learning model is a long and laborious process. Managing it by hand is painful and error prone. \"), mdx(\"h2\", null, \"Goals\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make it easy to get started in a notebook or python interpreter\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Just Python TM\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Track execution time and artifacts\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Avoid serialization between steps when possible\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Run where you want, on your computer, github actions, kubernetes or anything else.\")), mdx(\"h2\", null, \"Tasks\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from microman import task\\n\\n@task\\ndef download_data():\\n  pass\\n\\n\\n@task\\ndef train_model():\\n  pass\\n\\n\\n@task\\ndef full_pipeline():\\n  data = download_data()\\n  train_model(data)\\n\")), mdx(\"h4\", null, \"DAGs by Run instead of Static DAGs\"), mdx(\"h2\", null, \"Task Runs\"), mdx(\"h2\", null, \"Runners\"), mdx(\"h4\", null, \"Local\"), mdx(\"h4\", null, \"Dask\"), mdx(\"h2\", null, \"Data Lineage\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Examples\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}