{"componentChunkName":"component---src-templates-blog-post-js","path":"/drafts/yann/","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":"µ","author":"Michal Wolski"}},"mdx":{"id":"6941d024-335c-5676-a43e-01ef2d532ad8","excerpt":"Yann is  yet another neural network  library that aims to make it easier to go from a quick training script to production. It provides glue code to handle…","frontmatter":{"title":"Yann: pain free PyTorch from notebook to production","tags":["pytorch"],"date":"January 01, 2020"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Yann: pain free PyTorch from notebook to production\",\n  \"date\": \"2020-01-01T22:12:03.284Z\",\n  \"tags\": [\"pytorch\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Yann is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"yet another neural network\"), \" library that aims to make it easier to go from a quick training script to production. It provides glue code to handle common workflows that are not covered by PyTorch. \"), mdx(\"h3\", null, \"Goals\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Stay out of your way\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make it easy to try different things\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Help you avoid common bugs like forgetting to zero out gradients\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use what you need\")), mdx(\"h2\", null, \"Hyperparameters\"), mdx(\"h2\", null, \"Models\"), mdx(\"h4\", null, \"Shape Inference\"), mdx(\"h4\", null, \"Model Slicing With Stack\"), mdx(\"h4\", null, \"Latest Modules\"), mdx(\"h2\", null, \"Training\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from yann.train import Trainer\\n\\ntrain = yann.Trainer()\\n\\n\")), mdx(\"h4\", null, \"Checkpointing\"), mdx(\"h4\", null, \"Logging\"), mdx(\"h4\", null, \"Callbacks\"), mdx(\"h4\", null, \"Distributed Training\"), mdx(\"h2\", null, \"Evaluation\"), mdx(\"h2\", null, \"Inference\"), mdx(\"h2\", null, \"Testing\"), mdx(\"h2\", null, \"Deployment\"), mdx(\"h4\", null, \"Exporting\"), mdx(\"h4\", null, \"Serving\"), mdx(\"h2\", null, \"Data\"), mdx(\"h4\", null, \"Classes and Encoding\"), mdx(\"h4\", null, \"Saving and Loading\"), mdx(\"h4\", null, \"Indexing\"), mdx(\"h2\", null, \"Jupyter Integration\"), mdx(\"h2\", null, \"Utilities\"), mdx(\"h4\", null, \"Registry\"), mdx(\"h4\", null, \"3rd Party Integrations\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/drafts/yann/","previous":null,"next":{"id":"f40dacd2-c58b-5b13-9471-4a1887914335","fields":{"slug":"/drafts/self-supervision/"},"frontmatter":{"title":"Self Supervision","tags":["pytorch"]},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Self Supervision\",\n  \"date\": \"2020-01-02T22:12:03.284Z\",\n  \"tags\": [\"pytorch\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}