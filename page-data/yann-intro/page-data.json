{"componentChunkName":"component---src-templates-blog-post-js","path":"/yann-intro/","webpackCompilationHash":"307f91b49892068324cf","result":{"data":{"site":{"siteMetadata":{"title":"µ","author":"Michal Wolski"}},"mdx":{"id":"de836a17-17ce-52d6-9641-452d655aa5a4","excerpt":"Yann is  yet another neural network  library that aims to make it easier to go from a quick training script to production. It provides glue code to handle…","frontmatter":{"title":"Yann: pain free PyTorch from notebook to production","tags":["pytorch"],"date":"January 01, 2020"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Yann: pain free PyTorch from notebook to production\",\n  \"date\": \"2020-01-01T22:12:03.284Z\",\n  \"tags\": [\"pytorch\"],\n  \"draft\": \"Yes\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Yann is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"yet another neural network\"), \" library that aims to make it easier to go from a quick training script to production. It provides glue code to handle common workflows that are not covered by PyTorch. \"), mdx(\"h3\", null, \"Goals\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Stay out of your way\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make it easy to try different things\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Help you avoid common bugs like forgetting to zero out gradients\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use what you need\")), mdx(\"h2\", null, \"Hyperparameters\"), mdx(\"h2\", null, \"Models\"), mdx(\"h4\", null, \"Shape Inference\"), mdx(\"h4\", null, \"Model Slicing With Stack\"), mdx(\"h4\", null, \"Latest Modules\"), mdx(\"h2\", null, \"Training\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from yann.train import Trainer\\n\\ntrain = yann.Trainer()\\n\\n\")), mdx(\"h4\", null, \"Checkpointing\"), mdx(\"h4\", null, \"Logging\"), mdx(\"h4\", null, \"Callbacks\"), mdx(\"h4\", null, \"Distributed Training\"), mdx(\"h2\", null, \"Evaluation\"), mdx(\"h2\", null, \"Inference\"), mdx(\"h2\", null, \"Testing\"), mdx(\"h2\", null, \"Deployment\"), mdx(\"h4\", null, \"Exporting\"), mdx(\"h4\", null, \"Serving\"), mdx(\"h2\", null, \"Data\"), mdx(\"h4\", null, \"Classes and Encoding\"), mdx(\"h4\", null, \"Saving and Loading\"), mdx(\"h4\", null, \"Indexing\"), mdx(\"h2\", null, \"Jupyter Integration\"), mdx(\"h2\", null, \"Utilities\"), mdx(\"h4\", null, \"Registry\"), mdx(\"h4\", null, \"3rd Party Integrations\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/yann-intro/","previous":null,"next":{"id":"6aeda3f1-5ad7-5ef0-8493-eaf29c1a7d1c","fields":{"slug":"/image-recognition-guide/"},"frontmatter":{"title":"Image Recognition Guide: an always up to date survey of image recognition","tags":["machine learning","image recognition","survey"],"draft":"Yes"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Image Recognition Guide: an always up to date survey of image recognition\",\n  \"date\": \"2020-01-02T22:12:03.284Z\",\n  \"tags\": [\"machine learning\", \"image recognition\", \"survey\"],\n  \"draft\": \"Yes\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Preprocessing\"), mdx(\"h4\", null, \"AutoAugment\"), mdx(\"h4\", null, \"Mixup\"), mdx(\"h5\", null, \"Manifold Mixup\"), mdx(\"h4\", null, \"Cutout\"), mdx(\"h2\", null, \"Architectures\"), mdx(\"h4\", null, \"ResNet\"), mdx(\"h4\", null, \"EfficientNet\"), mdx(\"p\", null, \"Scaling width, depth and input resolution\"), mdx(\"h3\", null, \"Convolution Variants\"), mdx(\"h3\", null, \"Width vs Depth\"), mdx(\"h3\", null, \"Receptive Fields\"), mdx(\"h3\", null, \"Attention\"), mdx(\"h3\", null, \"Activations\"), mdx(\"h4\", null, \"Softmax\"), mdx(\"p\", null, \"invariant to shifts\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/17187507/why-use-softmax-as-opposed-to-standard-normalization\"\n  }), \"Why use softmax as opposed to standard normalization?\")), mdx(\"h5\", null, \"Temperature\"), mdx(\"h4\", null, \"ReLU\"), mdx(\"p\", null, \"Cheap to compute \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"max(0, x)\")), mdx(\"p\", null, \"dying neurons\"), mdx(\"h4\", null, \"Sigmoid\"), mdx(\"p\", null, \"vanishing gradients\"), mdx(\"h3\", null, \"Normalization\"), mdx(\"h4\", null, \"BatchNorm\"), mdx(\"h4\", null, \"LayerNorm\"), mdx(\"h4\", null, \"WeightNorm\"), mdx(\"h2\", null, \"Regularization\"), mdx(\"h4\", null, \"Weight Decay\"), mdx(\"h5\", null, \"Bias Decay\"), mdx(\"h4\", null, \"Dropout\"), mdx(\"h4\", null, \"Label Smoothing\"), mdx(\"h2\", null, \"Losses\"), mdx(\"h2\", null, \"Training\"), mdx(\"h4\", null, \"Initialization\"), mdx(\"h4\", null, \"Learning Rate Warmup\"), mdx(\"h4\", null, \"Large Batch Training\"), mdx(\"h4\", null, \"Mixed Precision\"), mdx(\"h2\", null, \"Optimization\"), mdx(\"h4\", null, \"Optimizers\"), mdx(\"h4\", null, \"Learning Rate Schedules\"), mdx(\"h2\", null, \"Inference Tricks\"), mdx(\"h4\", null, \"FixRes\"), mdx(\"h4\", null, \"Multi Crop\"), mdx(\"h2\", null, \"Noise\"), mdx(\"h2\", null, \"Class Imbalance\"), mdx(\"h4\", null, \"Oversampling\"), mdx(\"h4\", null, \"Class Weights\"), mdx(\"h2\", null, \"Label Hierarchies\"), mdx(\"h2\", null, \"Multi Label\"), mdx(\"h2\", null, \"Transfer Learning\"), mdx(\"h2\", null, \"Knowledge Distillation\"), mdx(\"h2\", null, \"Few Shot Learning\"), mdx(\"h2\", null, \"Datasets\"), mdx(\"h2\", null, \"Simulation\"), mdx(\"h2\", null, \"Semi Supervised\"), mdx(\"h2\", null, \"Self Supervised / Unsupervised\"), mdx(\"h2\", null, \"Fine Grained Recognition\"), mdx(\"h2\", null, \"Deployment\"), mdx(\"h4\", null, \"Model Compression / Prunning\"), mdx(\"h4\", null, \"Mobile\"), mdx(\"h4\", null, \"Batch Inference\"), mdx(\"h4\", null, \"Streaming Inference\"), mdx(\"h4\", null, \"Low Latency Inference\"), mdx(\"h2\", null, \"Issues\"), mdx(\"h4\", null, \"Bias\"), mdx(\"h4\", null, \"Training / Serving Skew\"), mdx(\"h4\", null, \"Adversarial Examples\"), mdx(\"h4\", null, \"Privacy / Federated Learning\"), mdx(\"h2\", null, \"Evaluation\"), mdx(\"h2\", null, \"Results\"), mdx(\"h4\", null, \"Parameter Settings\"), mdx(\"h2\", null, \"Parameter Count, FLOPS, Inference Speed\"), mdx(\"h2\", null, \"Dataset Size vs Performance\"), mdx(\"h2\", null, \"Current Heuristics and Best Practices\"), mdx(\"h2\", null, \"Applications\"), mdx(\"h4\", null, \"Medical Imaging\"), mdx(\"h4\", null, \"Face Recognition\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}