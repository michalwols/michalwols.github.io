{"componentChunkName":"component---src-templates-blog-post-js","path":"/image-recognition-survey/","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog MDX","author":"Matt Hagner"}},"mdx":{"id":"6db700a1-61bd-58ca-8b7d-cd9ab6e50fd5","excerpt":"Preprocessing AutoAugment Mixup Manifold Mixup Cutout Architectures Convolution Variants Attention Activations Normalization BatchNorm LayerNorm Regularizationâ€¦","frontmatter":{"title":"Image Recognition Guide: an always up to date survey of the progress in image recognition","tags":["machine learning","image recognition","survey"],"date":"January 02, 2020"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Image Recognition Guide: an always up to date survey of the progress in image recognition\",\n  \"date\": \"2020-01-02T22:12:03.284Z\",\n  \"tags\": [\"machine learning\", \"image recognition\", \"survey\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Preprocessing\"), mdx(\"h4\", null, \"AutoAugment\"), mdx(\"h4\", null, \"Mixup\"), mdx(\"h5\", null, \"Manifold Mixup\"), mdx(\"h4\", null, \"Cutout\"), mdx(\"h2\", null, \"Architectures\"), mdx(\"h3\", null, \"Convolution Variants\"), mdx(\"h3\", null, \"Attention\"), mdx(\"h3\", null, \"Activations\"), mdx(\"h3\", null, \"Normalization\"), mdx(\"h4\", null, \"BatchNorm\"), mdx(\"h4\", null, \"LayerNorm\"), mdx(\"h2\", null, \"Regularization\"), mdx(\"h4\", null, \"Weight Decay\"), mdx(\"h5\", null, \"Bias Decay\"), mdx(\"h4\", null, \"Dropout\"), mdx(\"h4\", null, \"Label Smoothing\"), mdx(\"h2\", null, \"Losses\"), mdx(\"h2\", null, \"Training\"), mdx(\"h4\", null, \"Initialization\"), mdx(\"h4\", null, \"Learning Rate Warmup\"), mdx(\"h4\", null, \"Large Batch Training\"), mdx(\"h4\", null, \"Mixed Precision\"), mdx(\"h2\", null, \"Optimization\"), mdx(\"h4\", null, \"Optimizers\"), mdx(\"h4\", null, \"Learning Rate Schedules\"), mdx(\"h2\", null, \"Inference Tricks\"), mdx(\"h4\", null, \"FixRes\"), mdx(\"h2\", null, \"Noise\"), mdx(\"h2\", null, \"Class Imbalance\"), mdx(\"h4\", null, \"Oversampling\"), mdx(\"h4\", null, \"Class Weights\"), mdx(\"h2\", null, \"Label Hierarchies\"), mdx(\"h2\", null, \"Multi Label\"), mdx(\"h2\", null, \"Transfer Learning\"), mdx(\"h2\", null, \"Knowledge Distillation\"), mdx(\"h2\", null, \"Few Shot Learning\"), mdx(\"h2\", null, \"Datasets\"), mdx(\"h2\", null, \"Simulation\"), mdx(\"h2\", null, \"Semi Supervised\"), mdx(\"h2\", null, \"Self Supervised / Unsupervised\"), mdx(\"h2\", null, \"Issues\"), mdx(\"h4\", null, \"Sample Efficiency\"), mdx(\"h2\", null, \"Results\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/image-recognition-survey/","previous":{"id":"a4608413-48cd-5df0-9023-955e2e10c120","fields":{"slug":"/yann/"},"frontmatter":{"title":"Yann: pain free PyTorch from notebook to production","tags":["pytorch"]},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Yann: pain free PyTorch from notebook to production\",\n  \"date\": \"2020-01-01T22:12:03.284Z\",\n  \"tags\": [\"pytorch\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Yann is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"yet another neural network\"), \" library that aims to make it easier to go from a quick training script to production. It provides glue code to handle common workflows that are not covered by PyTorch. \"), mdx(\"h3\", null, \"Goals\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Stay out of your way\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make it easy to try different things\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Help you avoid common bugs like forgetting to zero out gradients\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use what you need\")), mdx(\"h2\", null, \"Hyperparameters\"), mdx(\"h2\", null, \"Models\"), mdx(\"h4\", null, \"Shape Inference\"), mdx(\"h4\", null, \"Model Slicing With Stack\"), mdx(\"h4\", null, \"Latest Modules\"), mdx(\"h2\", null, \"Training\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from yann.train import Trainer\\n\\ntrain = yann.Trainer()\\n\\n\")), mdx(\"h4\", null, \"Checkpointing\"), mdx(\"h4\", null, \"Logging\"), mdx(\"h4\", null, \"Callbacks\"), mdx(\"h4\", null, \"Distributed Training\"), mdx(\"h2\", null, \"Evaluation\"), mdx(\"h2\", null, \"Inference\"), mdx(\"h2\", null, \"Testing\"), mdx(\"h2\", null, \"Deployment\"), mdx(\"h4\", null, \"Exporting\"), mdx(\"h4\", null, \"Serving\"), mdx(\"h2\", null, \"Data\"), mdx(\"h4\", null, \"Classes and Encoding\"), mdx(\"h4\", null, \"Saving and Loading\"), mdx(\"h4\", null, \"Indexing\"), mdx(\"h2\", null, \"Jupyter Integration\"), mdx(\"h2\", null, \"Utilities\"), mdx(\"h4\", null, \"Registry\"), mdx(\"h4\", null, \"3rd Party Integrations\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":{"id":"b7840937-ef5e-5ab4-8215-2b4f013efc46","fields":{"slug":"/microman/"},"frontmatter":{"title":"Microman: a simpler way to micromanage your (machine learning) tasks","tags":["python","automation"]},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Microman: a simpler way to micromanage your (machine learning) tasks\",\n  \"date\": \"2020-01-02T22:12:03.284Z\",\n  \"tags\": [\"python\", \"automation\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Going from raw data to a production machine learning model is a long and laborious process. Managing it by hand is painful and error prone. \"), mdx(\"h2\", null, \"Goals\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make it easy to get started in a notebook or python interpreter\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Just Python TM\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Track execution time and artifacts\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Avoid serialization between steps when possible\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Run where you want, on your computer, github actions, kubernetes or anything else.\")), mdx(\"h2\", null, \"Tasks\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from microman import task\\n\\n@task\\ndef download_data():\\n  pass\\n\\n\\n@task\\ndef train_model():\\n  pass\\n\\n\\n@task\\ndef full_pipeline():\\n  data = download_data()\\n  train_model(data)\\n\")), mdx(\"h4\", null, \"DAGs by Run instead of Static DAGs\"), mdx(\"h2\", null, \"Task Runs\"), mdx(\"h2\", null, \"Runners\"), mdx(\"h4\", null, \"Local\"), mdx(\"h4\", null, \"Dask\"), mdx(\"h2\", null, \"Data Lineage\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Examples\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}